# Generated by Django 4.0.4 on 2022-05-20 19:46

import ckeditor.fields
import cloudinary.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
from django.utils.timezone import utc


class Migration(migrations.Migration):

    dependencies = [
        ('reservationapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='', max_length=50)),
                ('number_plate', models.CharField(default='', max_length=50, unique=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image', cloudinary.models.CloudinaryField(max_length=255, null=True, verbose_name='image')),
                ('total_seats', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('rate', models.SmallIntegerField(default=0)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('departure_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('arrival_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('price', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('paid', models.FloatField(default=0.0)),
                ('quantity', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('NORMAL', 'Normal'), ('HOLIDAY', 'Holiday'), ('TET', 'Tet')], default='NORMAL', max_length=20)),
                ('surcharge', models.FloatField(default=0.0)),
            ],
        ),
        migrations.AddField(
            model_name='route',
            name='image',
            field=cloudinary.models.CloudinaryField(max_length=255, null=True, verbose_name='image'),
        ),
        migrations.AddField(
            model_name='user',
            name='avatar',
            field=cloudinary.models.CloudinaryField(max_length=255, null=True, verbose_name='image'),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.IntegerField(choices=[(1, 'Customer'), (2, 'Admin'), (3, 'Driver'), (4, 'Employee')], default=1),
        ),
        migrations.AddConstraint(
            model_name='type',
            constraint=models.CheckConstraint(check=models.Q(('surcharge__lte', 1)), name='check surcharge is less than 1'),
        ),
        migrations.AlterUniqueTogether(
            name='type',
            unique_together={('name', 'surcharge')},
        ),
        migrations.AddField(
            model_name='ticket',
            name='schedule',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', related_query_name='my_ticket', to='reservationapp.schedule'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='station',
            name='province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservationapp.province'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='arrival_station',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules3', to='reservationapp.station'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='bus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules', to='reservationapp.bus'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='departure_station',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules4', to='reservationapp.station'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='route',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules2', related_query_name='my_schedule', to='reservationapp.route'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules5', to='reservationapp.type'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='user',
            field=models.ForeignKey(limit_choices_to={'role': 3}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='bus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='reservationapp.bus'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bus',
            name='tags',
            field=models.ManyToManyField(to='reservationapp.tag'),
        ),
        migrations.AddField(
            model_name='route',
            name='arrival_location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route2', to='reservationapp.province'),
        ),
        migrations.AlterField(
            model_name='route',
            name='departure_location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route1', to='reservationapp.province'),
        ),
        migrations.AlterUniqueTogether(
            name='route',
            unique_together={('departure_location', 'arrival_location')},
        ),
        migrations.AlterUniqueTogether(
            name='station',
            unique_together={('name', 'province')},
        ),
        migrations.AddConstraint(
            model_name='schedule',
            constraint=models.CheckConstraint(check=models.Q(('departure_time__gte', datetime.datetime(2022, 5, 20, 19, 46, 25, 333913, tzinfo=utc))), name='check departure_time is greater than now'),
        ),
        migrations.AddConstraint(
            model_name='schedule',
            constraint=models.CheckConstraint(check=models.Q(('arrival_time__gt', django.db.models.expressions.F('departure_time'))), name='check arrival_time is greater than departure_time'),
        ),
        migrations.AddConstraint(
            model_name='schedule',
            constraint=models.CheckConstraint(check=models.Q(('departure_station', django.db.models.expressions.F('arrival_station')), _negated=True), name='check departure_station is not arrival_station'),
        ),
        migrations.AlterUniqueTogether(
            name='schedule',
            unique_together={('bus', 'departure_time')},
        ),
        migrations.AlterUniqueTogether(
            name='feedback',
            unique_together={('user', 'bus')},
        ),
        migrations.AddConstraint(
            model_name='bus',
            constraint=models.CheckConstraint(check=models.Q(('total_seats__gt', 0)), name='check total_seats is greater than 0'),
        ),
        migrations.RemoveField(
            model_name='route',
            name='destination_location',
        ),
        migrations.RemoveField(
            model_name='route',
            name='name',
        ),
    ]
